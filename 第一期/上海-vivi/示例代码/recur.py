# -.- coding:utf-8 -.-#利用递归函数计算阶乘#N！= 1*2*3*4*.....*N'''def fact(n):    if n == 1:        return 1    return n * fact(n-1)print(fact(10))'''#尾递归'''def fact(n):    return fact_iter(n, 1)def fact_iter(num, product):    if num == 1:        return product    return fact_iter(num-1, num*product)print(fact(5))print(fact_iter(5, 1))print(fact_iter(4, 5))print(fact_iter(100,1))'''#执行结果# 120# 120# 120# 93326215443944152681699238856266700490715968264381621468592963895217599993229915608941463976156518286253697920827223758251185210916864000000000000000000000000#结果显示即使是尾递归，也有栈溢出的危险，且经验证确实maximum了#利用递归函数移动汉塔塔：def move(n, a, b, c):    if n==1:        print('move', '-->', c)    else:        move(n-1, a, c, b)        move(1, a, b, c)        move(n-1, b, a, c)move(5, 'A', 'B', 'C')#执行结果：'''move --> Cmove --> Bmove --> Bmove --> Cmove --> Amove --> Cmove --> Cmove --> Bmove --> Bmove --> Amove --> Amove --> Bmove --> Cmove --> Bmove --> Bmove --> Cmove --> Amove --> Cmove --> Cmove --> Amove --> Bmove --> Amove --> Amove --> Cmove --> Cmove --> Bmove --> Bmove --> Cmove --> Amove --> Cmove --> C'''